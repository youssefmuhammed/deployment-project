# version: 2.1
# orbs:
#   # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
#   node: circleci/node@5.0.2
#   eb: circleci/aws-elastic-beanstalk@2.0.1
#   aws-cli: circleci/aws-cli@3.1.1
#   # different jobs are calles later in the workflows sections
# jobs:
#   build:
#     docker:
#       # the base image can run most needed actions with orbs
#       - image: "cimg/node:14.15"
#     steps:
#       # install node and checkout code
#       - node/install:
#           node-version: '14.15'         
#       - checkout
#       # Use root level package.json to install dependencies in the frontend app
#       - run:
#           name: Install Front-End Dependencies
#           command: |
#             echo "NODE --version" 
#             echo $(node --version)
#             echo "NPM --version" 
#             echo $(npm --version)
#             npm run frontend:install
#       # TODO: Install dependencies in the the backend API          
#       - run:
#           name: Install API Dependencies
#           command: |
#            echo "TODO: Install dependencies in the the backend API  "
#       # TODO: Lint the frontend
#       - run:
#           name: Front-End Lint
#           command: |
#             echo "TODO: Lint the frontend"
#       # TODO: Build the frontend app
#       - run:
#           name: Front-End Build
#           command: |
#             echo "TODO: Build the frontend app"
#       # TODO: Build the backend API      
#       - run:
#           name: API Build
#           command: |
#             echo "TODO: Build the backend API"
#   # deploy step will run only after manual approval
#   deploy:
#     docker:
#       - image: "cimg/base:stable"
#       # more setup needed for aws, node, elastic beanstalk
#     steps:
#       - node/install:
#           node-version: '14.15' 
#       - eb/setup
#       - aws-cli/setup
#       - checkout
#       - run:
#           name: Deploy App
#           # TODO: Install, build, deploy in both apps
#           command: |
#             echo " TODO: Install, build, deploy in both apps"
            
# workflows:
#   udagram:
#     jobs:
#       - build
#       - hold:
#           filters:
#             branches:
#               only:
#                 - master
#           type: approval
#           requires:
#             - build
#       - deploy:
#           requires:
#             - hold
##################################################################################################################3


version: 2.1

orbs:
  node: circleci/node@5.0.1
  aws-cli: circleci/aws-cli@1.3.1
  eb: circleci/aws-elastic-beanstalk@2.0.1
jobs:
  build-and-deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install
      - checkout
      - aws-cli/setup
# Installing the frontend dependencies
      - run:
          name: Front-End Install
          command: |
            npm run frontend:install
      
# Building the frontend
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
# Deploying the frontend to AWS S3
      - run:
          name: Front-End Deploy
          command: |
            npm run frontend:deploy
# Installing the Backend dependencies
      - run:
          name: Back-End Install
          command: |
            npm run backend:install
# # Changing the main entry point in package.json for the Backend
#       - run:
#           name: Back-End Change Main Entry Point
#           command: |
#             npm run backend:change-main
# Building the backend
      - run:
          name: Back-End Build
          command: |
            npm run backend:build
# Installing AWS Elastic Beanstalk CLI
      - run:
          name: Installing AWS Elasticbeanstalk
          command: |
            npm run backend:aws-eb
# Deploying the backend to AWS Elastic Beanstalk
      - run:
          name: Back-End Deploy
          command: |
            npm run backend:deploy

workflows:
  build-and-deploy:
    jobs:
      - build-and-deploy:
          context: aws
          filters:
            branches:
              only:
                - main
